from Bio.Seq import Seq
from Bio import SeqIO
from Bio.SeqUtils import GC
gc_values ={}
for rec in SeqIO.parse("Rosalind_Data.fasta","fasta"):
	gc_values[rec.id] = GC(rec.seq)
sort_orders = sorted(gc_values.items(), key=lambda x: x[1])
print(sort_orders)
#for seq_record in SeqIO.parse("./GC_Computing_GC_Content/ls_orchid.fasta","fasta"):
#	print(seq_record.id)
#	print(seq_record.seq._data)
#	print(repr(seq_record.seq))
#	print(len(seq_record))
#data = ">Rosalind_7837TTTCACCTGGCTTCCGTTGTCGGATTCGATGATTAGAGATGGGCTGCCCCCATCCAGGTGCTTGGTGCTTCCAATCAAGTCTGGAAGAACCTCCCAAGGGCGCGGAGGCTTACGGATATCGTGTCCTGATGATTCTGCACTAGACTGGCAACTAACAAGGTTCTTACACTAACATGGGGAATCTTACAAATACTGGTTTCATTCACCTGTATGTTCGCACTGATCCGGGTAAAAGCAGGGTCCGTGTGGTCGTTACTGACACACGATCATCAGAGTTGGTGTCCGAGGTGGGAACCTTGTAGCTGAAGGCGCCACAATCAAATTGCAAATGTCCTCAGAACCCTACGCTGCCCGACGCTATTGCTTGGGTTCATAAACGGGGGTGCGCGTTGAGAGTACTCAGTAAAGTCAAATGGCTAAGAATATAGTTTACACAACATCGACTTGAGCCGCCTACCGACTATTCTTGATGAGTGTGAAAAACCCCACAGAGGCATCGTGCACGGCGGGCTAAGGGTCTCCATCACAACTTGTGACGTACACTGCGCGCGTCTCTTACCTCACACGGCAGCAGGGTTGTTCGAGATTTGACTGATCAAAAAACGTCCCGTAACAGCGACCGGCGCCATGTGCATGGCTGCTACTATTGTATGCATCGTGCACAAGGCGGTCACGGGAGAGGTATATGATGTCGCGTACGCCTGGCAGTATGCTAGGGGAAACATCCGGATTCAATCTTCATCCACTGTCGATCTCGCGAGTCCTTTGTGCGATTGTACGTCGCAGTCCATTCTGCACTTAAGGCCGCGTTATTTCGTCCTAGTGTCGTTGACGATCCCATTGGCCCCCGACTGTCTAACCCCTTTCGGAGTGAAACATAAA>Rosalind_4135TGCTCAGTGGAAAGGATCAAGCTACTCTTGAGGTTGATGAAAACCCCTATAGATATACTAACACCACCGAACAGCCTAGTACTGTTCCCATATAACTCCATTCGGAATAAGGAGGCTCTATATATAGCACAAGAACCAACTTTGACTACCATCACGACCTTGGTCTTATCCCGCACTTTCCGTACATCCAAAGTCTGCCATTGTAGGGGATCGCTATTTTTCCGCCTTGGTAAATAGTAATCTGAGGCATGAAACATCGAGATTCCTATGCATGAACTTAACTTTGAAGACAGTTGCGAGCTGTTAGCACTGCGACGAAGTACCCCAAGCGCAGTTAGATCCACGGTAAGAGGAGGCGGCAGTCAGTAAAGCCCCGTAGAAGGAGGTGTTAGCCTGGACAAGCTTATGGTGCTATATCAGGTTCCTGTGACGGCTTTGATGATGCTGTAGGGGGGGGCTTTTTCCTTTTGTCACTTTGTACGCACTTCGTGTCCTGGCGGCCCAAGAGCTCTACCACTTATTCCGGGCGAATCGAGCAGTCATTGACAAACCCTGCTTCAGCTGGAGTTGGTGACTTTGAAATCGTTATATGTCAGGATCCAAATGCAACCCTTTCCGTGAATAGCGCAGACTAGCGGAGGCGGCAATACGCCTGCATTTATTAGCCGAGGCTGCTAGGCACGAACTGTCGTAGGCAAGCCATAGTTCTCGCGTTACGACGTCGGGTACCGCCAGAACCGAGCTTCGAAACCAATACACAATCCATCCTTACGTTTTGATCGAGCTACTAACGTAAAAGCAGGTAGAGGCCAGTAAGATACAAACTTTGACTTTGCGGTCGTGATACCAGCCGGGCTTTCTCTCATTTGCTGGATATGCCGTGGTAGGTAGCGTGATGCTCC>Rosalind_0511GCAAATAGCATGGAGTTAGGGTTACCGCAGCAGAGCGAATGCCCGGTGATTCATAGATTAACTTCTCCATTTTGAAAATCAGATTTAGCCTCCCGGCCACACTGAATCGATTGCTAACAGAAGCGTGCAGTCGCATAAGTGGCGAAGTGTCCAATTGCCGATTCCTACGGTACATGAGTAAAGACTGTGGCCGGAGGATGATGGACTCCTGGATGGAGATCATATAACCCATCGCGTTGAGCAGAATCGGAGAAGTGCCTCACACCCTGGCAAGGGCGGCGGGCTAGGTTCGCGCACCCTAAGTCGACCTATTTTTTTGTGCCTACTATTCAATCCCTGACCCGGGCGGATAGGCCCTAAATTATTCTCAAATCGGGCGGTGGTCTTGAGCTTTTTGCCTCTTTGTGGTGCATAAGCAGCAGAAACCAGAACCGCCGCGTTACTTCTAAGGGACGCCTAAAAGTTATTACGGACCCCAACCACACCACATAGCCTACCCATTGGACGGTAGCCAAGACTAAAACGACATTGCTGGGGACATGGACGTACATTCCCTACTTTGATAGATACAGGCCCTCATTTCAACGGGATGACCACGACACCTCAAAACTTTAGAGGCCTGAGGGTAGTGAGAGCTAGTAGCTACGCGAGAGAGCGTCCGCCCGCCTTCCAGTCGAGGCTCCGCAATGGTTGAATTGGCCATAGAATACCAGATAGCCCTTTTTTTTTGCGCCGGTACATCCGAAGGAGAATATGTCGGTCATGGTGGCAACTTGGTGTTCGTACGTCTCTTGGTTCAATCGGGCGAG>Rosalind_8740ATGTGAGAAGTGAAAGCAGGTATACCGACCAAGCTTGGCTAAATTAATACGATGGCTGCGCCTCTTTAGACCGTGGACGAGGGCTTGATTGTTCACTTTCGTGAGAACCCCTAGATACTATGGCAAGACCAGCACGGAAAGCGACACCCAGGGTCTAGAAATCCCGGGGTGCACATCGTGGCAACCCTGGAACTGGGAGGCCAGCACTTACTGGACCCGCCGAATGCTAAATGCTCACTCTGGATTATTACTACCACAATCCGATCAGACACGTTATGTGGGCTTGCTACGCCAAGCCAGCGGAGTGTTGTGGATATGAGCGTAAAGTTCTAGTGCCGTGCTTGTTATGACACTAATTGATCGACGGGTTGCGGATAGAGCTTCAGTGACTCCATCTACAGGTTTACGGTTAATATAGCGGTTGTCGCTTGGAAAACGAGTCCTGGGTATAGCCCTCGGGAGGAGAGCCGGGCCGGAACCGTTTAGGCTAAGGATCATGCTATTTGCCACATCGCGCAAGTGAGCCGGCCAGGGCCATTCAGTCCACTATTCGAGGAAGACAACAGACTATATCCGCCAAATCCGAGTGTGACCTTTCAGCGATAAAGAAGTAGACTCTTAGTAAATGTCGAATGTTGCAATCGAGAAGTTGGAGCGCCGGCTCAATGAAAGGTCGCAAGGTGGCCGAGGTCCCATCCAAAGTATGAAGACTTCAACATTAGCCGGAATATTCCGTTAGGACCTGAGATGAGCGACCTGCCAACTAATTCTCGGAGCCGAAAGAGACAAAAGGGAGGGACAATCCGGCTTTTTATCGGAGCCGAGATAGCTGCTTCGCAGCTCTAGACATTCGTATTCTCCATCCTCAAGTTCGTTT>Rosalind_7419GCAATTGGGTGACAGATTATCGGGATTTGGCACACCGGTCGGGCCAAGGGCCAGATCTACGCCTGCCATGTTCCGCTTCTCCCCCCAGCGCTGTATAAAGGCGGCGGAGAGTTATGTCCGAAGAGCATTTGTGTCTGTTTCTTGGGGGCATACGGCCCCCCCAGGCTAAAGCCTATCGATAGGGAAACGAAATTGCGGATCCTGCTCCAAAGTTCTGCTTGTCACAGAAGTTAAAATGGAATCGTTATCGTACTAGAAAACGGCTGCAACCCCGGACACTCGTTCCGAAAGCAAAGGAAAAAGTACGACGACTGGTCCGGATTGACCGAAGACACCCACCATCCCATCAAACTACCCGGGACGGAAGTGTGGACCGACCAAAAGGGATCAAGACTGATTATCTTGGAAAAATTGCTTTTGCCGAGGCCGCCTGACGGCCGGTATGTAGCAAGTAAAACCGGCCGAGTAGTGGAGCATGACGTACCCTTCTGCGTGCTCGGCTTAGAGGTTGAGGGATCTAGGTGTCCTGAATCTAGGAATGATGATGCAGCGGATAAAGTGTTTAGAAACCTGAACGGCCGGCGCACCAATTGTGAGCATTTTAGTTCTTGCCAGGGGTATGGACAGGGCCGAGAGATGCGACGGGTCGAATTAATTATATAGGCTAATTAGGCAGTTAACAACGGTCCGTCCGACTGAACATAAGGCTCCCCCTTCGCGACTCTGTCGGGCTGCTGCAAGCGCTAGATTTCATGTAACTATCGGGCCGTCCATTAACACAACTTTCGCGTGGTGTTATATAGGGCACCTAGCCCTGCGGAGCAGGCTTGCCCAAGGCTCACTATGTAACAGTACGCGGACGGGGCTAACATACCTCAGTAAGAG"

#dnaStrands = data.split('>')
#s = dict()
#newVal = 0
#oldVal = 0
#hVal = 0
#hValKey = 0
#for row in dnaStrands:
#	  if row != "":
#	     key = row[0:13]
#	     value = row[14:len(row)]
#	     sum = value.count('G') + value.count('C')
#	     tc = len(value)
#	     per = ((sum/tc)*100)
#	     newVal = per
#	     if newVal > oldVal:
#	     	  oldVal = newVal
#	     	  hVal = newVal
#	     	  hValKey = key
	     
#print("Winner: {} - {}".format(hValKey,hVal))
 

